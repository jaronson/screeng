class Screeng::Writer
  attr_reader :runner
  attr_reader :group
  attr_reader :parser
  attr_reader :options

  attr_reader :target_path

  def initialize(runner)
    @runner  = runner
    @group   = runner.screen_group
    @options = runner.options
  end

  def write
    write_screeng_file
    write_cache_file
  end

  private

  def write_screeng_file
    make_dirs
    screengrc = generate_screengrc
    return if options[:dry]

    if File.exists?(set_target_path)
      runner.inform("Existing found, overwriting.")
      write_data(screengrc)
    else
      write_data(screengrc)
    end
  end

  def write_cache_file
    header = "Generated by screeng on #{DateTime.now.strftime("%Y%m%d %H:%I%S")}, checksum: #{group.checksum}\n"

    File.open(group.cache_file, 'w') do |f|
      f.write("#{header}#{group.json}")
    end
  end

  def make_dirs
    if !File.exists?(options[:screeng]) && !options[:dry]
      runner.inform("#{options[:screeng]} does not exist, creating.")
      FileUtils.mkdir(options[:screeng])
    end

    cache_dir = group.cache_directory

    if !File.exists?(cache_dir) && !options[:dry]
      runner.inform("#{cache_dir} does not exist, creating.")
      FileUtils.mkdir(cache_dir)
    end
  end

  def set_target_path
    @target_path = File.join(options[:screeng], group.session_name.to_s)
  end

  def generate_screengrc
    (
      [ "source #{options[:screenrc]}" ] +
      group.screen_commands
    ).join("\n")
  end

  def write_data(data)
    File.open(target_path,'w') do |f|
      f.write(data)
    end
  end
end
